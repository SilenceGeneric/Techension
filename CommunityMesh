##my neighborhood Mesh Network project using Lora technology##
## this is what I have so far. the working code for the esp32 microcontrollers this is actively being worked on##

#include <LoRa.h>
#include <WiFi.h>
#include <WiFiClient.h>
#include <WebServer.h>

// LoRa network settings
#define LORA_SCK 5
#define LORA_MISO 19
#define LORA_MOSI 27
#define LORA_SS 18
#define LORA_RST 14
#define LORA_DI0 26
#define LORA_FREQUENCY 915E6
#define LORA_MESH_ADDRESS 1
#define LORA_MESH_CHANNEL 0

// WiFi network settings
const char* ssid = "YourWiFiSSID";
const char* password = "YourWiFiPassword";

WebServer server(80);

void setup() {
  Serial.begin(9600);

  // Initialize LoRa
  LoRa.setPins(LORA_SCK, LORA_MISO, LORA_MOSI, LORA_SS, LORA_RST, LORA_DI0);
  if (!LoRa.begin(LORA_FREQUENCY)) {
    Serial.println("LoRa initialization failed.");
    while (true);
  }
  LoRa.enableCrc();
  LoRa.setSyncWord(0xFF);
  LoRa.meshSetAddress(LORA_MESH_ADDRESS);
  LoRa.meshSetChannel(LORA_MESH_CHANNEL);

  // Connect to WiFi
  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(1000);
    Serial.println("Connecting to WiFi...");
  }
  Serial.println("WiFi connected");

  // Start the web server
  server.on("/", handleRoot);
  server.begin();
  Serial.println("HTTP server started");
}

void loop() {
  server.handleClient();

  String message = receiveLoRaMessage();
  if (message != "") {
    Serial.println("Received message: " + message);
    // Process received message here
  }

  // Access Internet in a Box
  String response = accessInternetInABox();
  if (response != "") {
    Serial.println("Response from Internet in a Box: " + response);
    // Process response here
  }

  delay(1000);
}

void handleRoot() {
  server.send(200, "text/plain", "Welcome to the ESP32 Mesh Network!");
}

String receiveLoRaMessage() {
  if (LoRa.parsePacket() == 0) {
    return "";
  }
  String receivedMessage = "";
  while (LoRa.available()) {
    receivedMessage += (char)LoRa.read();
  }
  return receivedMessage;
}

String accessInternetInABox() {
  String request = "GET /internet_in_a_box HTTP/1.1\r\nHost: 192.168.1.100\r\nConnection: close\r\n\r\n";
  LoRa.beginPacket();
  LoRa.print(request);
  LoRa.endPacket();
  
  if (LoRa.parsePacket() == 0) {
    return "";
  }
  String response = "";
  while (LoRa.available()) {
    response += (char)LoRa.read();
  }
  return response;
}
